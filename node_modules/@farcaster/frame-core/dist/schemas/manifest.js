"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.domainManifestSchema = exports.domainFrameConfigSchema = void 0;
const zod_1 = require("zod");
const shared_1 = require("./shared");
const primaryCategorySchema = zod_1.z.enum([
    'games',
    'social',
    'finance',
    'utility',
    'productivity',
    'health-fitness',
    'news-media',
    'music',
    'shopping',
    'education',
    'developer-tools',
    'entertainment',
    'art-creativity',
]);
exports.domainFrameConfigSchema = zod_1.z.object({
    // 0.0.0 and 0.0.1 are not technically part of the spec but kept for
    // backwards compatibilty. next should always resolve to the most recent
    // schema version.
    version: zod_1.z.union([
        zod_1.z.literal('0.0.0'),
        zod_1.z.literal('0.0.1'),
        zod_1.z.literal('1'),
        zod_1.z.literal('next'),
    ]),
    name: shared_1.frameNameSchema,
    iconUrl: shared_1.secureUrlSchema,
    homeUrl: shared_1.secureUrlSchema,
    /** deprecated, set ogImageUrl instead */
    imageUrl: shared_1.secureUrlSchema.optional(),
    /** deprecated, will rely on fc:frame meta tag */
    buttonTitle: shared_1.buttonTitleSchema.optional(),
    splashImageUrl: shared_1.secureUrlSchema.optional(),
    splashBackgroundColor: shared_1.hexColorSchema.optional(),
    webhookUrl: shared_1.secureUrlSchema.optional(),
    /** see: https://github.com/farcasterxyz/miniapps/discussions/191 */
    subtitle: (0, shared_1.createSimpleStringSchema)({ max: 30 }).optional(),
    description: (0, shared_1.createSimpleStringSchema)({ max: 170 }).optional(),
    screenshotUrls: zod_1.z.array(shared_1.secureUrlSchema).max(3).optional(),
    primaryCategory: primaryCategorySchema.optional(),
    tags: zod_1.z
        .array((0, shared_1.createSimpleStringSchema)({ max: 20, noSpaces: true }))
        .max(5)
        .optional(),
    heroImageUrl: shared_1.secureUrlSchema.optional(),
    tagline: (0, shared_1.createSimpleStringSchema)({ max: 30 }).optional(),
    ogTitle: (0, shared_1.createSimpleStringSchema)({ max: 30 }).optional(),
    ogDescription: (0, shared_1.createSimpleStringSchema)({ max: 100 }).optional(),
    ogImageUrl: shared_1.secureUrlSchema.optional(),
    /** see: https://github.com/farcasterxyz/miniapps/discussions/204 */
    noindex: zod_1.z.boolean().optional(),
});
exports.domainManifestSchema = zod_1.z.object({
    accountAssociation: shared_1.encodedJsonFarcasterSignatureSchema,
    frame: exports.domainFrameConfigSchema.optional(),
});
