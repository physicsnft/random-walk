{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js", "../src/index.ts", "../../frame-core/esm/actions/AddFrame.js", "../../frame-core/esm/errors.js", "../../frame-core/esm/actions/ComposeCast.js", "../../frame-core/esm/actions/Ready.js", "../../frame-core/esm/actions/SignIn.js", "../../frame-core/esm/actions/SendToken.js", "../../frame-core/esm/actions/SwapToken.js", "../../frame-core/esm/actions/ViewProfile.js", "../../frame-core/esm/actions/ViewToken.js", "../../frame-core/esm/wallet/ethereum.js", "../../frame-core/esm/context.js", "../../frame-core/esm/manifest.js", "../../../node_modules/.pnpm/zod@3.24.1/node_modules/zod/lib/index.mjs", "../../frame-core/esm/schemas/shared.js", "../../frame-core/esm/schemas/embeds.js", "../../frame-core/esm/schemas/notifications.js", "../../frame-core/esm/schemas/events.js", "../../frame-core/esm/schemas/manifest.js", "../../../node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs", "../../../node_modules/.pnpm/comlink@4.4.2/node_modules/comlink/src/comlink.ts", "../src/endpoint.ts", "../src/frameHost.ts", "../../../node_modules/.pnpm/ox@0.4.4_typescript@5.7.2_zod@3.24.1/node_modules/ox/core/version.ts", "../../../node_modules/.pnpm/ox@0.4.4_typescript@5.7.2_zod@3.24.1/node_modules/ox/core/internal/errors.ts", "../../../node_modules/.pnpm/ox@0.4.4_typescript@5.7.2_zod@3.24.1/node_modules/ox/core/Errors.ts", "../../../node_modules/.pnpm/ox@0.4.4_typescript@5.7.2_zod@3.24.1/node_modules/ox/core/RpcResponse.ts", "../../../node_modules/.pnpm/ox@0.4.4_typescript@5.7.2_zod@3.24.1/node_modules/ox/core/Provider.ts", "../../../node_modules/.pnpm/ox@0.4.4_typescript@5.7.2_zod@3.24.1/node_modules/ox/core/RpcRequest.ts", "../src/provider.ts", "../src/sdk.ts"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "import { sdk } from './sdk'\n\nexport * from './sdk'\nexport * from '@farcaster/frame-core'\n\nexport default sdk\n", "import * as Errors from '../errors';\n/**\n * Thrown when the frame does not have a valid domain manifest.\n */\nexport class InvalidDomainManifest extends Errors.BaseError {\n    name = 'AddFrame.InvalidDomainManifest';\n    constructor() {\n        super('Invalid domain manifest');\n    }\n}\n/**\n * Thrown when add frame action was rejected by the user.\n */\nexport class RejectedByUser extends Errors.BaseError {\n    name = 'AddFrame.RejectedByUser';\n    constructor() {\n        super('Add frame rejected by user');\n    }\n}\n", "export class BaseError extends Error {\n    name = 'BaseError';\n    cause;\n    constructor(message, options = {}) {\n        super(message, options.cause ? { cause: options.cause } : undefined);\n        this.cause = options.cause;\n    }\n}\n", "export {};\n", "export const DEFAULT_READY_OPTIONS = {\n    disableNativeGestures: false,\n};\n", "import * as Errors from '../errors';\n/**\n * Thrown when a sign in action was rejected.\n */\nexport class RejectedByUser extends Errors.BaseError {\n    name = 'SignIn.RejectedByUser';\n    constructor() {\n        super('Sign in rejected by user');\n    }\n}\n", "export {};\n", "export {};\n", "export {};\n", "export {};\n", "export {};\n", "export {};\n", "export {};\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "import { z } from 'zod';\nconst SPECIAL_CHARS_PATTERN = /[@#$%^&*+=\\/\\\\|~\u00AB\u00BB]/;\nconst REPEATED_PUNCTUATION_PATTERN = /(!{2,}|\\?{2,}|-{2,})/;\n// Unicode ranges for emoji detection:\n// \\u{1F300}-\\u{1F9FF} - Miscellaneous Symbols, Pictographs, Emoticons, Transport, Map, and Supplemental\n// \\u{2702}-\\u{27B0} - Dingbats\n// \\u{2600}-\\u{26FF} - Miscellaneous Symbols\n// \\u{2B00}-\\u{2BFF} - Miscellaneous Symbols and Arrows\nconst EMOJI_PATTERN = /[\\u{1F300}-\\u{1F9FF}]|[\\u{2702}-\\u{27B0}]|[\\u{2600}-\\u{26FF}]|[\\u{2B00}-\\u{2BFF}]/u;\nexport const createSimpleStringSchema = ({ max, noSpaces, } = {}) => {\n    const stringValidations = noSpaces\n        ? z\n            .string()\n            .max(max ?? Number.POSITIVE_INFINITY)\n            .regex(/^\\S*$/, 'Spaces are not allowed')\n        : z.string().max(max ?? Number.POSITIVE_INFINITY);\n    return stringValidations\n        .refine((value) => !EMOJI_PATTERN.test(value), {\n        message: 'Emojis and symbols are not allowed',\n    })\n        .refine((value) => !SPECIAL_CHARS_PATTERN.test(value), {\n        message: 'Special characters (@, #, $, %, ^, &, *, +, =, /, \\\\, |, ~, \u00AB, \u00BB) are not allowed',\n    })\n        .refine((value) => !REPEATED_PUNCTUATION_PATTERN.test(value), {\n        message: 'Repeated punctuations (!!, ??, --) are not allowed',\n    });\n};\nexport const secureUrlSchema = z\n    .string()\n    .url()\n    .startsWith('https://', { message: 'Must be an https url' })\n    .max(1024);\nexport const frameNameSchema = z.string().max(32);\nexport const buttonTitleSchema = z.string().max(32);\nconst CAIP_19_REGEX = /^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}\\/(?:[-a-z0-9]{3,8}:[-.%a-zA-Z0-9]{1,128}(?:\\/[-.%a-zA-Z0-9]{1,78})?|native)$/;\nexport const caip19TokenSchema = z\n    .string()\n    .regex(CAIP_19_REGEX, { message: 'Invalid CAIP-19 asset ID' });\nexport const hexColorSchema = z\n    .string()\n    .regex(/^#([0-9A-F]{3}|[0-9A-F]{6})$/i, {\n    message: 'Invalid hex color code. It should be in the format #RRGGBB or #RGB.',\n});\nexport const aspectRatioSchema = z.union([z.literal('1:1'), z.literal('3:2')]);\nexport const encodedJsonFarcasterSignatureSchema = z.object({\n    header: z.string(),\n    payload: z.string(),\n    signature: z.string(),\n});\nexport const jsonFarcasterSignatureHeaderSchema = z.object({\n    fid: z.number(),\n    type: z.literal('app_key'),\n    key: z.string().startsWith('0x'),\n});\n", "import { z } from 'zod';\nimport { aspectRatioSchema, buttonTitleSchema, caip19TokenSchema, frameNameSchema, hexColorSchema, secureUrlSchema, } from './shared';\nexport const actionLaunchFrameSchema = z.object({\n    type: z.literal('launch_frame'),\n    name: frameNameSchema,\n    url: secureUrlSchema.optional(),\n    splashImageUrl: secureUrlSchema.optional(),\n    splashBackgroundColor: hexColorSchema.optional(),\n});\nexport const actionViewTokenSchema = z.object({\n    type: z.literal('view_token'),\n    token: caip19TokenSchema,\n});\nexport const actionSchema = z.discriminatedUnion('type', [\n    actionLaunchFrameSchema,\n    actionViewTokenSchema,\n]);\nexport const buttonSchema = z.object({\n    title: buttonTitleSchema,\n    action: actionSchema,\n});\nexport const frameEmbedNextSchema = z.object({\n    version: z.literal('next'),\n    imageUrl: secureUrlSchema,\n    aspectRatio: aspectRatioSchema.optional(),\n    button: buttonSchema,\n});\nexport const safeParseFrameEmbed = (rawResponse) => frameEmbedNextSchema.safeParse(rawResponse);\n", "import { z } from 'zod';\nimport { secureUrlSchema } from './shared';\nexport const notificationDetailsSchema = z.object({\n    url: z.string(),\n    token: z.string(),\n});\nexport const sendNotificationRequestSchema = z.object({\n    notificationId: z.string().max(128),\n    title: z.string().max(32),\n    body: z.string().max(128),\n    targetUrl: secureUrlSchema,\n    tokens: z.string().array().max(100),\n});\nexport const sendNotificationResponseSchema = z.object({\n    result: z.object({\n        successfulTokens: z.array(z.string()),\n        invalidTokens: z.array(z.string()),\n        rateLimitedTokens: z.array(z.string()),\n    }),\n});\n", "import { z } from 'zod';\nimport { notificationDetailsSchema } from './notifications';\nexport const eventFrameAddedSchema = z.object({\n    event: z.literal('frame_added'),\n    notificationDetails: notificationDetailsSchema.optional(),\n});\nexport const eventFrameRemovedSchema = z.object({\n    event: z.literal('frame_removed'),\n});\nexport const eventNotificationsEnabledSchema = z.object({\n    event: z.literal('notifications_enabled'),\n    notificationDetails: notificationDetailsSchema.required(),\n});\nexport const notificationsDisabledSchema = z.object({\n    event: z.literal('notifications_disabled'),\n});\nexport const serverEventSchema = z.discriminatedUnion('event', [\n    eventFrameAddedSchema,\n    eventFrameRemovedSchema,\n    eventNotificationsEnabledSchema,\n    notificationsDisabledSchema,\n]);\n", "import { z } from 'zod';\nimport { buttonTitleSchema, createSimpleStringSchema, encodedJsonFarcasterSignatureSchema, frameNameSchema, hexColorSchema, secureUrlSchema, } from './shared';\nconst primaryCategorySchema = z.enum([\n    'games',\n    'social',\n    'finance',\n    'utility',\n    'productivity',\n    'health-fitness',\n    'news-media',\n    'music',\n    'shopping',\n    'education',\n    'developer-tools',\n    'entertainment',\n    'art-creativity',\n]);\nexport const domainFrameConfigSchema = z.object({\n    // 0.0.0 and 0.0.1 are not technically part of the spec but kept for\n    // backwards compatibilty. next should always resolve to the most recent\n    // schema version.\n    version: z.union([\n        z.literal('0.0.0'),\n        z.literal('0.0.1'),\n        z.literal('1'),\n        z.literal('next'),\n    ]),\n    name: frameNameSchema,\n    iconUrl: secureUrlSchema,\n    homeUrl: secureUrlSchema,\n    /** deprecated, set ogImageUrl instead */\n    imageUrl: secureUrlSchema.optional(),\n    /** deprecated, will rely on fc:frame meta tag */\n    buttonTitle: buttonTitleSchema.optional(),\n    splashImageUrl: secureUrlSchema.optional(),\n    splashBackgroundColor: hexColorSchema.optional(),\n    webhookUrl: secureUrlSchema.optional(),\n    /** see: https://github.com/farcasterxyz/miniapps/discussions/191 */\n    subtitle: createSimpleStringSchema({ max: 30 }).optional(),\n    description: createSimpleStringSchema({ max: 170 }).optional(),\n    screenshotUrls: z.array(secureUrlSchema).max(3).optional(),\n    primaryCategory: primaryCategorySchema.optional(),\n    tags: z\n        .array(createSimpleStringSchema({ max: 20, noSpaces: true }))\n        .max(5)\n        .optional(),\n    heroImageUrl: secureUrlSchema.optional(),\n    tagline: createSimpleStringSchema({ max: 30 }).optional(),\n    ogTitle: createSimpleStringSchema({ max: 30 }).optional(),\n    ogDescription: createSimpleStringSchema({ max: 100 }).optional(),\n    ogImageUrl: secureUrlSchema.optional(),\n    /** see: https://github.com/farcasterxyz/miniapps/discussions/204 */\n    noindex: z.boolean().optional(),\n});\nexport const domainManifestSchema = z.object({\n    accountAssociation: encodedJsonFarcasterSignatureSchema,\n    frame: domainFrameConfigSchema.optional(),\n});\n", "import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport type { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nexport const finalizer = Symbol(\"Comlink.finalizer\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\ntype PendingListenersMap = Map<\n  string,\n  (value: WireValue | PromiseLike<WireValue>) => void\n>;\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nfunction isAllowedOrigin(\n  allowedOrigins: (string | RegExp)[],\n  origin: string\n): boolean {\n  for (const allowedOrigin of allowedOrigins) {\n    if (origin === allowedOrigin || allowedOrigin === \"*\") {\n      return true;\n    }\n    if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function expose(\n  obj: any,\n  ep: Endpoint = globalThis as any,\n  allowedOrigins: (string | RegExp)[] = [\"*\"]\n) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n      console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n          if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n            obj[finalizer]();\n          }\n        }\n      })\n      .catch((error) => {\n        // Send Serialization Error To Caller\n        const [wireValue, transferables] = toWireValue({\n          value: new TypeError(\"Unserializable return value\"),\n          [throwMarker]: 0,\n        });\n        ep.postMessage({ ...wireValue, id }, transferables);\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  const pendingListeners : PendingListenersMap = new Map();\n\n  ep.addEventListener(\"message\", function handleMessage(ev: Event) {\n    const { data } = ev as MessageEvent;\n    if (!data || !data.id) {\n      return;\n    }\n    const resolver = pendingListeners.get(data.id);\n    if (!resolver) {\n      return;\n    }\n\n    try {\n      resolver(data);\n    } finally {\n      pendingListeners.delete(data.id);\n    }\n  });\n\n  return createProxy<T>(ep, pendingListeners, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction releaseEndpoint(ep: Endpoint) {\n  return requestResponseMessage(ep, new Map(), {\n    type: MessageType.RELEASE,\n  }).then(() => {\n    closeEndPoint(ep);\n  });\n}\n\ninterface FinalizationRegistry<T> {\n  new (cb: (heldValue: T) => void): FinalizationRegistry<T>;\n  register(\n    weakItem: object,\n    heldValue: T,\n    unregisterToken?: object | undefined\n  ): void;\n  unregister(unregisterToken: object): void;\n}\ndeclare var FinalizationRegistry: FinalizationRegistry<Endpoint>;\n\nconst proxyCounter = new WeakMap<Endpoint, number>();\nconst proxyFinalizers =\n  \"FinalizationRegistry\" in globalThis &&\n  new FinalizationRegistry((ep: Endpoint) => {\n    const newCount = (proxyCounter.get(ep) || 0) - 1;\n    proxyCounter.set(ep, newCount);\n    if (newCount === 0) {\n      releaseEndpoint(ep);\n    }\n  });\n\nfunction registerProxy(proxy: object, ep: Endpoint) {\n  const newCount = (proxyCounter.get(ep) || 0) + 1;\n  proxyCounter.set(ep, newCount);\n  if (proxyFinalizers) {\n    proxyFinalizers.register(proxy, ep, proxy);\n  }\n}\n\nfunction unregisterProxy(proxy: object) {\n  if (proxyFinalizers) {\n    proxyFinalizers.unregister(proxy);\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  pendingListeners: PendingListenersMap,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          unregisterProxy(proxy);\n          releaseEndpoint(ep);\n          pendingListeners.clear();\n          isProxyReleased = true;\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, pendingListeners, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, pendingListeners, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously \u00AF\\_(\u30C4)_/\u00AF\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        pendingListeners,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, pendingListeners, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn\u2019t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, pendingListeners, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        pendingListeners,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        pendingListeners,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  registerProxy(proxy, ep);\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T extends {}>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = globalThis,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  pendingListeners: PendingListenersMap,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    pendingListeners.set(id, resolve);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n});\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n", "import { type Endpoint, windowEndpoint } from 'comlink'\n\nconst mockEndpoint: Endpoint = {\n  postMessage() {\n    // noop\n  },\n  addEventListener: () => {\n    // noop\n  },\n  removeEventListener: () => {\n    // noop\n  },\n}\n\nconst webViewEndpoint: Endpoint = {\n  postMessage: (data: unknown) => {\n    console.debug('[webview:req]', data)\n    window.ReactNativeWebView.postMessage(JSON.stringify(data))\n  },\n  addEventListener: (_, listener, ...args) => {\n    document.addEventListener('FarcasterFrameCallback', listener, ...args)\n  },\n  removeEventListener: (_, listener) => {\n    document.removeEventListener('FarcasterFrameCallback', listener)\n  },\n}\n\nexport const endpoint = (() => {\n  // No actions are actually gonna take place during SSR, thus it's safe to return mocked endpoint\n  if (typeof window === 'undefined') return mockEndpoint\n  return window?.ReactNativeWebView\n    ? webViewEndpoint\n    : windowEndpoint(window?.parent ?? window)\n})()\n", "import type { WireFrameHost } from '@farcaster/frame-core'\nimport { wrap } from 'comlink'\nimport { endpoint } from './endpoint'\n\nexport const frameHost = wrap<WireFrameHost>(endpoint)\n", "/** @internal */\nexport const version = '0.1.1'\n", "import { version } from '../version.js'\n\n/** @internal */\nexport function getUrl(url: string) {\n  return url\n}\n\n/** @internal */\nexport function getVersion() {\n  return version\n}\n\n/** @internal */\nexport function prettyPrint(args: unknown) {\n  if (!args) return ''\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n", "import { getVersion } from './internal/errors.js'\n\nexport type GlobalErrorType<name extends string = 'Error'> = Error & {\n  name: name\n}\n\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError<\n  cause extends Error | undefined = undefined,\n> extends Error {\n  details: string\n  docs?: string | undefined\n  docsPath?: string | undefined\n  shortMessage: string\n\n  override cause: cause\n  override name = 'BaseError'\n\n  version = `ox@${getVersion()}`\n\n  constructor(shortMessage: string, options: BaseError.Options<cause> = {}) {\n    const details = (() => {\n      if (options.cause instanceof BaseError) {\n        if (options.cause.details) return options.cause.details\n        if (options.cause.shortMessage) return options.cause.shortMessage\n      }\n      if (options.cause?.message) return options.cause.message\n      return options.details!\n    })()\n    const docsPath = (() => {\n      if (options.cause instanceof BaseError)\n        return options.cause.docsPath || options.docsPath\n      return options.docsPath\n    })()\n\n    const docsBaseUrl = 'https://oxlib.sh'\n    const docs = `${docsBaseUrl}${docsPath ?? ''}`\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      ...(options.metaMessages ? ['', ...options.metaMessages] : []),\n      ...(details || docsPath\n        ? [\n            '',\n            details ? `Details: ${details}` : undefined,\n            docsPath ? `See: ${docs}` : undefined,\n          ]\n        : []),\n    ]\n      .filter((x) => typeof x === 'string')\n      .join('\\n')\n\n    super(message, options.cause ? { cause: options.cause } : undefined)\n\n    this.cause = options.cause as any\n    this.details = details\n    this.docs = docs\n    this.docsPath = docsPath\n    this.shortMessage = shortMessage\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nexport declare namespace BaseError {\n  type Options<cause extends Error | undefined = Error | undefined> = {\n    cause?: cause | undefined\n    details?: string | undefined\n    docsPath?: string | undefined\n    metaMessages?: (string | undefined)[] | undefined\n  }\n}\n\n/** @internal */\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err && err.cause)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n", "import type { Errors, RpcRequest } from '../index.js'\nimport type {\n  Compute,\n  IsNarrowable,\n  OneOf,\n  UnionPartialBy,\n} from './internal/types.js'\n\n/** A JSON-RPC response object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#request_object). */\nexport type RpcResponse<\n  result = unknown,\n  error extends ErrorObject = ErrorObject,\n> = Compute<\n  {\n    id: number\n    jsonrpc: '2.0'\n  } & OneOf<{ result: result } | { error: error }>\n>\n\n/** JSON-RPC error object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#error_object). */\nexport type ErrorObject = {\n  code: number\n  message: string\n  data?: unknown | undefined\n}\n\n/**\n * A type-safe interface to instantiate a JSON-RPC response object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#response_object).\n *\n * @example\n * ### Instantiating a Response Object\n *\n * ```ts twoslash\n * import { RpcResponse } from 'ox'\n *\n * const response = RpcResponse.from({\n *   id: 0,\n *   jsonrpc: '2.0',\n *   result: '0x69420',\n * })\n * ```\n *\n * @example\n * ### Type-safe Instantiation\n *\n * If you have a JSON-RPC request object, you can use it to strongly-type the response. If a `request` is provided,\n * then the `id` and `jsonrpc` properties will be overridden with the values from the request.\n *\n * ```ts twoslash\n * import { RpcRequest, RpcResponse } from 'ox'\n *\n * const request = RpcRequest.from({ id: 0, method: 'eth_blockNumber' })\n *\n * const response = RpcResponse.from(\n *   { result: '0x69420' },\n *   { request },\n * )\n * ```\n *\n * @param response - Opaque JSON-RPC response object.\n * @param options - Parsing options.\n * @returns Typed JSON-RPC result, or response object (if `raw` is `true`).\n */\nexport function from<\n  request extends RpcRequest.RpcRequest | undefined = undefined,\n  const response =\n    | (request extends RpcRequest.RpcRequest\n        ? request['_returnType']\n        : RpcResponse)\n    | unknown,\n>(\n  response: from.Response<request, response>,\n  options?: from.Options<request>,\n): Compute<from.ReturnType<response>>\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function from(response: RpcResponse, options: any = {}): RpcResponse {\n  const { request } = options\n  return {\n    ...response,\n    id: response.id ?? request?.id,\n    jsonrpc: response.jsonrpc ?? request.jsonrpc,\n  }\n}\n\nexport declare namespace from {\n  type Response<\n    request extends RpcRequest.RpcRequest | undefined = undefined,\n    response = unknown,\n  > = response &\n    (request extends RpcRequest.RpcRequest\n      ? UnionPartialBy<RpcResponse<request['_returnType']>, 'id' | 'jsonrpc'>\n      : RpcResponse)\n\n  type Options<\n    request extends RpcRequest.RpcRequest | undefined =\n      | RpcRequest.RpcRequest\n      | undefined,\n  > = {\n    request?: request | RpcRequest.RpcRequest | undefined\n  }\n\n  type ReturnType<response> = IsNarrowable<response, RpcResponse> extends true\n    ? RpcResponse\n    : response & Readonly<{ id: number; jsonrpc: '2.0' }>\n}\n\n/**\n * A type-safe interface to parse a JSON-RPC response object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#response_object), and extract the result.\n *\n * @example\n * ```ts twoslash\n * import { RpcRequest, RpcResponse } from 'ox'\n *\n * // 1. Create a request store.\n * const store = RpcRequest.createStore()\n *\n * // 2. Get a request object.\n * const request = store.prepare({\n *   method: 'eth_getBlockByNumber',\n *   params: ['0x1', false],\n * })\n *\n * // 3. Send the JSON-RPC request via HTTP.\n * const block = await fetch('https://1.rpc.thirdweb.com', {\n *   body: JSON.stringify(request),\n *   headers: {\n *     'Content-Type': 'application/json',\n *   },\n *   method: 'POST',\n * })\n *  .then((response) => response.json())\n *  // 4. Parse the JSON-RPC response into a type-safe result. // [!code focus]\n *  .then((response) => RpcResponse.parse(response, { request })) // [!code focus]\n *\n * block // [!code focus]\n * // ^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * :::tip\n *\n * If you don't need the return type, you can omit the options entirely.\n *\n * ```ts twoslash\n * // @noErrors\n * import { RpcResponse } from 'ox'\n *\n * const block = await fetch('https://1.rpc.thirdweb.com', {})\n *  .then((response) => response.json())\n *  .then((response) => RpcResponse.parse(response, { request })) // [!code --]\n *  .then(RpcResponse.parse) // [!code ++]\n * ```\n * :::\n *\n * @example\n * ### Raw Mode\n *\n * If `raw` is `true`, the response will be returned as an object with `result` and `error` properties instead of returning the `result` directly and throwing errors.\n *\n * ```ts twoslash\n * import { RpcRequest, RpcResponse } from 'ox'\n *\n * const store = RpcRequest.createStore()\n *\n * const request = store.prepare({\n *   method: 'eth_blockNumber',\n * })\n *\n * const response = RpcResponse.parse({}, {\n *   request,\n *   raw: true, // [!code hl]\n * })\n *\n * response.result\n * //       ^?\n *\n *\n * response.error\n * //       ^?\n *\n *\n * ```\n *\n * @param response - Opaque JSON-RPC response object.\n * @param options - Parsing options.\n * @returns Typed JSON-RPC result, or response object (if `raw` is `true`).\n */\nexport function parse<\n  const response extends RpcResponse | unknown,\n  returnType,\n  raw extends boolean = false,\n>(\n  response: response,\n  options: parse.Options<returnType, raw> = {},\n): parse.ReturnType<\n  unknown extends response\n    ? returnType\n    : response extends RpcResponse\n      ? response extends { result: infer result }\n        ? result\n        : never\n      : returnType,\n  raw\n> {\n  const { raw = false } = options\n  const response_ = response as RpcResponse\n  if (raw) return response as never\n  if (response_.error) {\n    const { code } = response_.error\n    const JsonRpcError = (() => {\n      if (code === InternalError.code) return InternalError\n      if (code === InvalidInputError.code) return InvalidInputError\n      if (code === InvalidParamsError.code) return InvalidParamsError\n      if (code === InvalidRequestError.code) return InvalidRequestError\n      if (code === LimitExceededError.code) return LimitExceededError\n      if (code === MethodNotFoundError.code) return MethodNotFoundError\n      if (code === MethodNotSupportedError.code) return MethodNotSupportedError\n      if (code === ParseError.code) return ParseError\n      if (code === ResourceNotFoundError.code) return ResourceNotFoundError\n      if (code === ResourceUnavailableError.code)\n        return ResourceUnavailableError\n      if (code === TransactionRejectedError.code)\n        return TransactionRejectedError\n      if (code === VersionNotSupportedError.code)\n        return VersionNotSupportedError\n      return BaseError\n    })()\n    throw new JsonRpcError(response_.error)\n  }\n  return response_.result as never\n}\n\nexport declare namespace parse {\n  type Options<returnType, raw extends boolean = false> = {\n    /**\n     * JSON-RPC Method that was used to make the request. Used for typing the response.\n     */\n    request?:\n      | {\n          _returnType: returnType\n        }\n      | RpcRequest.RpcRequest\n      | undefined\n    /**\n     * Enables raw mode \u2013 responses will return an object with `result` and `error` properties instead of returning the `result` directly and throwing errors.\n     *\n     * - `true`: a JSON-RPC response object will be returned with `result` and `error` properties.\n     * - `false`: the JSON-RPC response object's `result` property will be returned directly, and JSON-RPC Errors will be thrown.\n     *\n     * @default false\n     */\n    raw?: raw | boolean | undefined\n  }\n\n  type ReturnType<returnType, raw extends boolean = false> = Compute<\n    raw extends true ? RpcResponse<returnType> : returnType\n  >\n\n  type ErrorType =\n    | ParseError\n    | InvalidInputError\n    | ResourceNotFoundError\n    | ResourceUnavailableError\n    | TransactionRejectedError\n    | MethodNotSupportedError\n    | LimitExceededError\n    | VersionNotSupportedError\n    | InvalidRequestError\n    | MethodNotFoundError\n    | InvalidParamsError\n    | InternalError\n    | BaseErrorType\n    | Errors.GlobalErrorType\n}\n\nexport type BaseErrorType = BaseError & { name: 'BaseError' }\n\n/** Thrown when a JSON-RPC error has occurred. */\nexport class BaseError extends Error {\n  override name = 'RpcResponse.BaseError'\n\n  readonly code: number\n  readonly data?: unknown | undefined\n\n  constructor(errorObject: ErrorObject) {\n    const { code, message, data } = errorObject\n    super(message)\n    this.code = code\n    this.data = data\n  }\n}\n\n/** Thrown when the input to a JSON-RPC method is invalid. */\nexport class InvalidInputError extends BaseError {\n  static readonly code = -32000\n  override readonly code = -32000\n  override readonly name = 'RpcResponse.InvalidInputError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Missing or invalid parameters.',\n      ...parameters,\n      code: InvalidInputError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC resource is not found. */\nexport class ResourceNotFoundError extends BaseError {\n  static readonly code = -32001\n  override readonly code = -32001\n  override readonly name = 'RpcResponse.ResourceNotFoundError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Requested resource not found.',\n      ...parameters,\n      code: ResourceNotFoundError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC resource is unavailable. */\nexport class ResourceUnavailableError extends BaseError {\n  static readonly code = -32002\n  override readonly code = -32002\n  override readonly name = 'RpcResponse.ResourceUnavailableError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Requested resource not available.',\n      ...parameters,\n      code: ResourceUnavailableError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC transaction is rejected. */\nexport class TransactionRejectedError extends BaseError {\n  static readonly code = -32003\n  override readonly code = -32003\n  override readonly name = 'RpcResponse.TransactionRejectedError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Transaction creation failed.',\n      ...parameters,\n      code: TransactionRejectedError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC method is not supported. */\nexport class MethodNotSupportedError extends BaseError {\n  static readonly code = -32004\n  override readonly code = -32004\n  override readonly name = 'RpcResponse.MethodNotSupportedError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Method is not implemented.',\n      ...parameters,\n      code: MethodNotSupportedError.code,\n    })\n  }\n}\n\n/** Thrown when a rate-limit is exceeded. */\nexport class LimitExceededError extends BaseError {\n  static readonly code = -32005\n  override readonly code = -32005\n  override readonly name = 'RpcResponse.LimitExceededError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Rate limit exceeded.',\n      ...parameters,\n      code: LimitExceededError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC version is not supported. */\nexport class VersionNotSupportedError extends BaseError {\n  static readonly code = -32006\n  override readonly code = -32006\n  override readonly name = 'RpcResponse.VersionNotSupportedError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'JSON-RPC version not supported.',\n      ...parameters,\n      code: VersionNotSupportedError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC request is invalid. */\nexport class InvalidRequestError extends BaseError {\n  static readonly code = -32600\n  override readonly code = -32600\n  override readonly name = 'RpcResponse.InvalidRequestError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Input is not a valid JSON-RPC request.',\n      ...parameters,\n      code: InvalidRequestError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC method is not found. */\nexport class MethodNotFoundError extends BaseError {\n  static readonly code = -32601\n  override readonly code = -32601\n  override readonly name = 'RpcResponse.MethodNotFoundError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Method does not exist.',\n      ...parameters,\n      code: MethodNotFoundError.code,\n    })\n  }\n}\n\n/** Thrown when the parameters to a JSON-RPC method are invalid. */\nexport class InvalidParamsError extends BaseError {\n  static readonly code = -32602\n  override readonly code = -32602\n  override readonly name = 'RpcResponse.InvalidParamsError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Invalid method parameters.',\n      ...parameters,\n      code: InvalidParamsError.code,\n    })\n  }\n}\n\n/** Thrown when an internal JSON-RPC error has occurred. */\nexport class InternalError extends BaseError {\n  static readonly code = -32603\n  override readonly code = -32603\n  override readonly name = 'RpcResponse.InternalErrorError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Internal JSON-RPC error.',\n      ...parameters,\n      code: InternalError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC response is invalid. */\nexport class ParseError extends BaseError {\n  static readonly code = -32700\n  override readonly code = -32700\n  override readonly name = 'RpcResponse.ParseError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Failed to parse JSON-RPC response.',\n      ...parameters,\n      code: ParseError.code,\n    })\n  }\n}\n", "import { EventEmitter } from 'eventemitter3'\nimport type * as Address from './Address.js'\nimport * as Errors from './Errors.js'\nimport * as RpcResponse from './RpcResponse.js'\nimport type * as RpcSchema from './RpcSchema.js'\nimport type * as RpcSchema_internal from './internal/rpcSchema.js'\nimport type { Compute } from './internal/types.js'\n\n/** Options for a {@link ox#Provider.Provider}. */\nexport type Options = {\n  /**\n   * Whether to include event functions (`on`, `removeListener`) on the Provider.\n   *\n   * @default true\n   */\n  includeEvents?: boolean | undefined\n  /**\n   * RPC Schema to use for the Provider's `request` function.\n   * See {@link ox#RpcSchema.(from:function)} for more.\n   *\n   * @default `RpcSchema.Generic`\n   */\n  schema?: RpcSchema.Generic | undefined\n}\n\n/** Root type for an EIP-1193 Provider. */\nexport type Provider<\n  options extends Options | undefined = undefined,\n  ///\n  _schema extends RpcSchema.Generic = options extends {\n    schema: infer schema extends RpcSchema.Generic\n  }\n    ? schema\n    : RpcSchema.Default,\n> = Compute<\n  {\n    request: RequestFn<_schema>\n  } & (options extends { includeEvents: true } | undefined\n    ? {\n        on: EventListenerFn\n        removeListener: EventListenerFn\n      }\n    : {})\n>\n\n/** Type for an EIP-1193 Provider's event emitter. */\nexport type Emitter = Compute<EventEmitter<EventMap>>\n\n/** EIP-1193 Provider's `request` function. */\nexport type RequestFn<schema extends RpcSchema.Generic = RpcSchema.Generic> = <\n  methodName extends RpcSchema.MethodNameGeneric,\n>(\n  parameters: RpcSchema_internal.ExtractRequestOpaque<schema, methodName>,\n) => Promise<RpcSchema.ExtractReturnType<schema, methodName>>\n\n/** Type for an EIP-1193 Provider's event listener functions (`on`, `removeListener`, etc). */\nexport type EventListenerFn = <event extends keyof EventMap>(\n  event: event,\n  listener: EventMap[event],\n) => void\n\nexport type ConnectInfo = {\n  chainId: string\n}\n\nexport type Message = {\n  type: string\n  data: unknown\n}\n\nexport class ProviderRpcError extends Error {\n  override name = 'ProviderRpcError'\n\n  code: number\n  details: string\n\n  constructor(code: number, message: string) {\n    super(message)\n    this.code = code\n    this.details = message\n  }\n}\n\nexport type EventMap = {\n  accountsChanged: (accounts: readonly Address.Address[]) => void\n  chainChanged: (chainId: string) => void\n  connect: (connectInfo: ConnectInfo) => void\n  disconnect: (error: ProviderRpcError) => void\n  message: (message: Message) => void\n}\n\n/** The user rejected the request. */\nexport class UserRejectedRequestError extends ProviderRpcError {\n  static readonly code = 4001\n  override readonly name = 'Provider.UserRejectedRequestError'\n\n  constructor({\n    message = 'The user rejected the request.',\n  }: { message?: string | undefined } = {}) {\n    super(4001, message)\n  }\n}\n\n/** The requested method and/or account has not been authorized by the user. */\nexport class UnauthorizedError extends ProviderRpcError {\n  static readonly code = 4100\n  override readonly name = 'Provider.UnauthorizedError'\n\n  constructor({\n    message = 'The requested method and/or account has not been authorized by the user.',\n  }: { message?: string | undefined } = {}) {\n    super(4100, message)\n  }\n}\n\n/** The provider does not support the requested method. */\nexport class UnsupportedMethodError extends ProviderRpcError {\n  static readonly code = 4200\n  override readonly name = 'Provider.UnsupportedMethodError'\n\n  constructor({\n    message = 'The provider does not support the requested method.',\n  }: { message?: string | undefined } = {}) {\n    super(4200, message)\n  }\n}\n\n/** The provider is disconnected from all chains. */\nexport class DisconnectedError extends ProviderRpcError {\n  static readonly code = 4900\n  override readonly name = 'Provider.DisconnectedError'\n\n  constructor({\n    message = 'The provider is disconnected from all chains.',\n  }: { message?: string | undefined } = {}) {\n    super(4900, message)\n  }\n}\n\n/** The provider is not connected to the requested chain. */\nexport class ChainDisconnectedError extends ProviderRpcError {\n  static readonly code = 4901\n  override readonly name = 'Provider.ChainDisconnectedError'\n\n  constructor({\n    message = 'The provider is not connected to the requested chain.',\n  }: { message?: string | undefined } = {}) {\n    super(4901, message)\n  }\n}\n\n/**\n * Creates an EIP-1193 flavored event emitter to be injected onto a Provider.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Provider, RpcRequest, RpcResponse } from 'ox' // [!code focus]\n *\n * // 1. Instantiate a Provider Emitter. // [!code focus]\n * const emitter = Provider.createEmitter() // [!code focus]\n *\n * const store = RpcRequest.createStore()\n *\n * const provider = Provider.from({\n *   // 2. Pass the Emitter to the Provider. // [!code focus]\n *   ...emitter, // [!code focus]\n *   async request(args) {\n *     return await fetch('https://1.rpc.thirdweb.com', {\n *       body: JSON.stringify(store.prepare(args)),\n *       method: 'POST',\n *       headers: {\n *         'Content-Type': 'application/json',\n *       },\n *     })\n *       .then((res) => res.json())\n *       .then(RpcResponse.parse)\n *   },\n * })\n *\n * // 3. Emit Provider Events. // [!code focus]\n * emitter.emit('accountsChanged', ['0x...']) // [!code focus]\n * ```\n *\n * @returns An event emitter.\n */\nexport function createEmitter(): Emitter {\n  const emitter = new EventEmitter<EventMap>()\n\n  return {\n    get eventNames() {\n      return emitter.eventNames.bind(emitter)\n    },\n    get listenerCount() {\n      return emitter.listenerCount.bind(emitter)\n    },\n    get listeners() {\n      return emitter.listeners.bind(emitter)\n    },\n    addListener: emitter.addListener.bind(emitter),\n    emit: emitter.emit.bind(emitter),\n    off: emitter.off.bind(emitter),\n    on: emitter.on.bind(emitter),\n    once: emitter.once.bind(emitter),\n    removeAllListeners: emitter.removeAllListeners.bind(emitter),\n    removeListener: emitter.removeListener.bind(emitter),\n  }\n}\n\nexport declare namespace createEmitter {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates an [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193) {@link ox#Provider.Provider}\n * from an arbitrary [EIP-1193 Provider](https://eips.ethereum.org/EIPS/eip-1193) interface.\n *\n * @example\n * ### Instantiating with RPC Transport\n *\n * Ox's {@link ox#RpcTransport} is EIP-1193 compliant, and can be used to instantiate an EIP-1193 Provider. This means you can use any HTTP RPC endpoint as an EIP-1193 Provider.\n *\n * ```ts twoslash\n * import { Provider, RpcTransport } from 'ox'\n *\n * const transport = RpcTransport.fromHttp('https://1.rpc.thirdweb.com')\n * const provider = Provider.from(transport)\n * ```\n *\n * @example\n * ### Instantiating with External Providers\n *\n * The example below demonstrates how we can instantiate a typed EIP-1193 Provider from an\n * external EIP-1193 Provider like `window.ethereum`.\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { Provider } from 'ox'\n *\n * const provider = Provider.from(window.ethereum)\n *\n * const blockNumber = await provider.request({ method: 'eth_blockNumber' })\n * ```\n *\n * :::tip\n *\n * There are also libraries that distribute EIP-1193 Provider objects that you can use with `Provider.from`:\n *\n * - [`@walletconnect/ethereum-provider`](https://www.npmjs.com/package/\\@walletconnect/ethereum-provider)\n *\n * - [`@coinbase/wallet-sdk`](https://www.npmjs.com/package/\\@coinbase/wallet-sdk)\n *\n * - [`@metamask/detect-provider`](https://www.npmjs.com/package/\\@metamask/detect-provider)\n *\n * - [`@safe-global/safe-apps-provider`](https://github.com/safe-global/safe-apps-sdk/tree/main/packages/safe-apps-provider)\n *\n * - [`mipd`](https://github.com/wevm/mipd): EIP-6963 Multi Injected Providers\n *\n * :::\n *\n * @example\n * ### Instantiating a Custom Provider\n *\n * The example below demonstrates how we can instantiate a typed EIP-1193 Provider from a\n * HTTP `fetch` JSON-RPC request. You can use this pattern to integrate with any asynchronous JSON-RPC\n * transport, including WebSockets and IPC.\n *\n * ```ts twoslash\n * // @noErrors\n * import { Provider, RpcRequest, RpcResponse } from 'ox'\n *\n * const store = RpcRequest.createStore()\n *\n * const provider = Provider.from({\n *   async request(args) {\n *     return await fetch('https://1.rpc.thirdweb.com', {\n *       body: JSON.stringify(store.prepare(args)),\n *       method: 'POST',\n *       headers: {\n *         'Content-Type': 'application/json',\n *       },\n *     })\n *       .then((res) => res.json())\n *       .then(RpcResponse.parse)\n *   },\n * })\n *\n * const blockNumber = await provider.request({ method: 'eth_blockNumber' })\n * ```\n *\n * @example\n * ### Type-safe Custom Schemas\n *\n * It is possible to define your own type-safe schema by using the {@link ox#RpcSchema.(from:function)} type.\n *\n * ```ts twoslash\n * // @noErrors\n * import 'ox/window'\n * import { Provider, RpcSchema } from 'ox'\n *\n * const schema = RpcSchema.from<\n *   | RpcSchema.Default\n *   | {\n *       Request: {\n *         method: 'abe_foo',\n *         params: [id: number],\n *       }\n *       ReturnType: string\n *     }\n *   | {\n *       Request: {\n *         method: 'abe_bar',\n *         params: [id: string],\n *       }\n *       ReturnType: string\n *     }\n * >()\n *\n * const provider = Provider.from(window.ethereum, { schema })\n *\n * const blockNumber = await provider.request({ method: 'e' })\n * //                                                    ^|\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Instantiating a Provider with Events\n *\n * The example below demonstrates how to instantiate a Provider with your own EIP-1193 flavored event emitter.\n *\n * This example is useful for Wallets that distribute an EIP-1193 Provider (e.g. webpage injection via `window.ethereum`).\n *\n * ```ts twoslash\n * // @noErrors\n * import { Provider, RpcRequest, RpcResponse } from 'ox'\n *\n * // 1. Instantiate a Provider Emitter.\n * const emitter = Provider.createEmitter() // [!code ++]\n *\n * const store = RpcRequest.createStore()\n *\n * const provider = Provider.from({\n *   // 2. Pass the Emitter to the Provider.\n *   ...emitter, // [!code ++]\n *   async request(args) {\n *     return await fetch('https://1.rpc.thirdweb.com', {\n *       body: JSON.stringify(store.prepare(args)),\n *       method: 'POST',\n *       headers: {\n *         'Content-Type': 'application/json',\n *       },\n *     })\n *       .then((res) => res.json())\n *       .then(RpcResponse.parse)\n *   },\n * })\n *\n * // 3. Emit Provider Events.\n * emitter.emit('accountsChanged', ['0x...']) // [!code ++]\n * ```\n *\n * @param provider - The EIP-1193 provider to convert.\n * @returns An typed EIP-1193 Provider.\n */\nexport function from<\n  const provider extends Provider | unknown,\n  options extends Options | undefined = undefined,\n>(\n  provider: provider | Provider<{ schema: RpcSchema.Generic }>,\n  options?: options | Options,\n): Provider<options>\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function from(provider: any, options: Options = {}): Provider<Options> {\n  const { includeEvents = true } = options\n  if (!provider) throw new IsUndefinedError()\n  return {\n    ...(includeEvents\n      ? {\n          on: provider.on?.bind(provider),\n          removeListener: provider.removeListener?.bind(provider),\n        }\n      : {}),\n    async request(args) {\n      const result = await provider.request(args)\n      if (\n        result &&\n        typeof result === 'object' &&\n        'jsonrpc' in (result as { jsonrpc?: unknown })\n      )\n        return RpcResponse.parse(result) as never\n      return result\n    },\n  }\n}\n\nexport declare namespace from {\n  type ErrorType = IsUndefinedError | Errors.GlobalErrorType\n}\n\n/** Thrown when the provider is undefined. */\nexport class IsUndefinedError extends Errors.BaseError {\n  override readonly name = 'Provider.IsUndefinedError'\n\n  constructor() {\n    super('`provider` is undefined.')\n  }\n}\n", "import type { Errors } from '../index.js'\nimport type * as RpcSchema from './RpcSchema.js'\nimport type * as RpcSchema_internal from './internal/rpcSchema.js'\nimport type { Compute } from './internal/types.js'\n\n/** A JSON-RPC request object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#request_object). */\nexport type RpcRequest<schema extends RpcSchema.Generic = RpcSchema.Generic> =\n  Compute<\n    schema extends any\n      ? schema['Request'] & {\n          id: number\n          jsonrpc: '2.0'\n          /** @deprecated internal */\n          _returnType: schema['ReturnType']\n        }\n      : never\n  >\n\n/** JSON-RPC request store type. */\nexport type Store<schema extends RpcSchema.Generic = RpcSchema.Default> =\n  Compute<{\n    prepare: <methodName extends RpcSchema.MethodNameGeneric>(\n      parameters: Compute<\n        RpcSchema_internal.ExtractRequestOpaque<schema, methodName>\n      >,\n    ) => Compute<RpcRequest<RpcSchema.ExtractItem<schema, methodName>>>\n    readonly id: number\n  }>\n\n/**\n * Creates a JSON-RPC request store to build requests with an incrementing `id`.\n *\n * Returns a type-safe `prepare` function to build a JSON-RPC request object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#request_object).\n *\n * @example\n * ```ts twoslash\n * import { RpcRequest } from 'ox'\n *\n * const store = RpcRequest.createStore()\n *\n * const request_1 = store.prepare({\n *   method: 'eth_blockNumber',\n * })\n * // @log: { id: 0, jsonrpc: '2.0', method: 'eth_blockNumber' }\n *\n * const request_2 = store.prepare({\n *   method: 'eth_call',\n *   params: [\n *     {\n *       to: '0x0000000000000000000000000000000000000000',\n *       data: '0xdeadbeef',\n *     },\n *   ],\n * })\n * // @log: { id: 1, jsonrpc: '2.0', method: 'eth_call', params: [{ to: '0x0000000000000000000000000000000000000000', data: '0xdeadbeef' }] }\n * ```\n *\n * @example\n * ### Type-safe Custom Schemas\n *\n * It is possible to define your own type-safe schema by using the {@link ox#RpcSchema.From} type.\n *\n * ```ts twoslash\n * import { RpcSchema, RpcRequest } from 'ox'\n *\n * type Schema = RpcSchema.From<{ // [!code focus]\n *   Request: { // [!code focus]\n *     method: 'eth_foobar' // [!code focus]\n *     params: [number] // [!code focus]\n *   } // [!code focus]\n *   ReturnType: string // [!code focus]\n * } | { // [!code focus]\n *   Request: { // [!code focus]\n *     method: 'eth_foobaz' // [!code focus]\n *     params: [string] // [!code focus]\n *   } // [!code focus]\n *   ReturnType: string // [!code focus]\n * }> // [!code focus]\n *\n * const store = RpcRequest.createStore<Schema>() // [!code focus]\n *\n * const request = store.prepare({\n *   method: 'eth_foobar', // [!code focus]\n *   // ^?\n *   params: [42],\n * })\n * ```\n *\n * @param options - Request store options.\n * @returns The request store\n */\nexport function createStore<\n  schema extends RpcSchema.Generic = RpcSchema.Default,\n>(options: createStore.Options = {}): createStore.ReturnType<schema> {\n  let id = options.id ?? 0\n  return {\n    prepare(options) {\n      return from({\n        id: id++,\n        ...options,\n      } as never) as never\n    },\n    get id() {\n      return id\n    },\n  }\n}\n\nexport declare namespace createStore {\n  type Options = {\n    /** The initial request ID. */\n    id?: number\n  }\n\n  type ReturnType<schema extends RpcSchema.Generic = RpcSchema.Default> =\n    Store<schema>\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * A type-safe interface to build a JSON-RPC request object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#request_object).\n *\n * :::warning\n *\n * You will likely want to use {@link ox#RpcRequest.(createStore:function)} instead as it will also manage `id`s and uses this function internally.\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { RpcRequest, RpcResponse } from 'ox'\n *\n * // 1. Build a request object.\n * const request = RpcRequest.from({ // [!code focus]\n *   id: 0, // [!code focus]\n *   method: 'eth_estimateGas', // [!code focus]\n *   params: [ // [!code focus]\n *     { // [!code focus]\n *       from: '0xd2135CfB216b74109775236E36d4b433F1DF507B', // [!code focus]\n *       to: '0x0D44f617435088c947F00B31160f64b074e412B4', // [!code focus]\n *       value: '0x69420', // [!code focus]\n *     }, // [!code focus]\n *   ], // [!code focus]\n * }) // [!code focus]\n *\n * // 2. Send the JSON-RPC request via HTTP.\n * const gas = await fetch('https://1.rpc.thirdweb.com', {\n *   body: JSON.stringify(request),\n *   headers: {\n *     'Content-Type': 'application/json',\n *   },\n *   method: 'POST',\n * })\n *  .then((response) => response.json())\n *  // 3. Parse the JSON-RPC response into a type-safe result.\n *  .then((response) => RpcResponse.parse(response, { request }))\n * ```\n *\n * @param options - JSON-RPC request options.\n * @returns The fully-formed JSON-RPC request object.\n */\nexport function from<methodName extends RpcSchema.MethodNameGeneric>(\n  options: from.Options<methodName>,\n): from.ReturnType<methodName> {\n  return {\n    ...options,\n    jsonrpc: '2.0',\n  } as never\n}\n\nexport declare namespace from {\n  type Options<methodName extends RpcSchema.MethodNameGeneric> = Compute<\n    RpcSchema_internal.ExtractRequestOpaque<RpcSchema.Default, methodName> & {\n      id: number\n    }\n  >\n\n  type ReturnType<methodName extends RpcSchema.MethodNameGeneric> = Compute<\n    RpcRequest<RpcSchema.ExtractItem<RpcSchema.Default, methodName>>\n  >\n\n  type ErrorType = Errors.GlobalErrorType\n}\n", "import type {\n  EthProviderWireEvent,\n  FrameClientEvent,\n} from '@farcaster/frame-core'\nimport type {\n  AnnounceProviderParameters,\n  AnnounceProviderReturnType,\n  EIP1193Provider,\n  EIP6963ProviderDetail,\n} from 'mipd'\nimport * as Provider from 'ox/Provider'\nimport * as RpcRequest from 'ox/RpcRequest'\nimport * as RpcResponse from 'ox/RpcResponse'\nimport { frameHost } from './frameHost'\n\nconst emitter = Provider.createEmitter()\nconst store = RpcRequest.createStore()\n\ntype GenericProviderRpcError = {\n  code: number\n  details?: string\n}\n\nfunction toProviderRpcError({\n  code,\n  details,\n}: GenericProviderRpcError): Provider.ProviderRpcError {\n  switch (code) {\n    case 4001:\n      return new Provider.UserRejectedRequestError()\n    case 4100:\n      return new Provider.UnauthorizedError()\n    case 4200:\n      return new Provider.UnsupportedMethodError()\n    case 4900:\n      return new Provider.DisconnectedError()\n    case 4901:\n      return new Provider.ChainDisconnectedError()\n    default:\n      return new Provider.ProviderRpcError(\n        code,\n        details ?? 'Unknown provider RPC error',\n      )\n  }\n}\n\nexport const provider: Provider.Provider = Provider.from({\n  ...emitter,\n  async request(args) {\n    // @ts-expect-error\n    const request = store.prepare(args)\n\n    try {\n      const response = await frameHost\n        .ethProviderRequestV2(request)\n        .then((res) => RpcResponse.parse(res, { request, raw: true }))\n\n      if (response.error) {\n        throw toProviderRpcError(response.error)\n      }\n\n      return response.result\n    } catch (e) {\n      // ethProviderRequestV2 not supported, fall back to v1\n      if (\n        e instanceof Error &&\n        e.message.match(/cannot read property 'apply'/i)\n      ) {\n        return await frameHost.ethProviderRequest(request)\n      }\n\n      if (\n        e instanceof Provider.ProviderRpcError ||\n        e instanceof RpcResponse.BaseError\n      ) {\n        throw e\n      }\n\n      throw new RpcResponse.InternalError({\n        message: e instanceof Error ? e.message : undefined,\n      })\n    }\n  },\n})\n\nfunction announceProvider(\n  detail: AnnounceProviderParameters,\n): AnnounceProviderReturnType {\n  const event: CustomEvent<EIP6963ProviderDetail> = new CustomEvent(\n    'eip6963:announceProvider',\n    { detail: Object.freeze(detail) },\n  )\n\n  window.dispatchEvent(event)\n\n  const handler = () => window.dispatchEvent(event)\n  window.addEventListener('eip6963:requestProvider', handler)\n  return () => window.removeEventListener('eip6963:requestProvider', handler)\n}\n\n// Required to pass SSR\nif (typeof document !== 'undefined') {\n  // forward eip6963:requestProvider events to the host\n  document.addEventListener('eip6963:requestProvider', () => {\n    frameHost.eip6963RequestProvider()\n  })\n\n  // react native webview events\n  document.addEventListener('FarcasterFrameEthProviderEvent', (event) => {\n    if (event instanceof MessageEvent) {\n      const ethProviderEvent = event.data as EthProviderWireEvent\n      // @ts-expect-error\n      emitter.emit(ethProviderEvent.event, ...ethProviderEvent.params)\n    }\n  })\n\n  document.addEventListener('FarcasterFrameEvent', (event) => {\n    if (event instanceof MessageEvent) {\n      const frameEvent = event.data as FrameClientEvent\n      if (frameEvent.event === 'eip6963:announceProvider') {\n        announceProvider({\n          info: frameEvent.info,\n          provider: provider as EIP1193Provider,\n        })\n      }\n    }\n  })\n}\n\n// Required to pass SSR\nif (typeof window !== 'undefined') {\n  // forward eip6963:requestProvider events to the host\n  window.addEventListener('eip6963:requestProvider', () => {\n    frameHost.eip6963RequestProvider()\n  })\n\n  // web events\n  window.addEventListener('message', (event) => {\n    if (event instanceof MessageEvent) {\n      if (event.data.type === 'frameEthProviderEvent') {\n        const ethProviderEvent = event.data as EthProviderWireEvent\n        // @ts-expect-error\n        emitter.emit(ethProviderEvent.event, ...ethProviderEvent.params)\n      }\n    }\n  })\n\n  window.addEventListener('message', (event) => {\n    if (event instanceof MessageEvent) {\n      if (event.data.type === 'frameEvent') {\n        const frameEvent = event.data.event as FrameClientEvent\n        if (frameEvent.event === 'eip6963:announceProvider') {\n          announceProvider({\n            info: frameEvent.info,\n            provider: provider as EIP1193Provider,\n          })\n        }\n      }\n    }\n  })\n}\n", "import { AddFrame, type FrameClientEvent, SignIn } from '@farcaster/frame-core'\nimport { EventEmitter } from 'eventemitter3'\nimport { frameHost } from './frameHost'\nimport { provider } from './provider'\nimport type { Emitter, EventMap, FrameSDK } from './types'\n\nexport function createEmitter(): Emitter {\n  const emitter = new EventEmitter<EventMap>()\n\n  return {\n    get eventNames() {\n      return emitter.eventNames.bind(emitter)\n    },\n    get listenerCount() {\n      return emitter.listenerCount.bind(emitter)\n    },\n    get listeners() {\n      return emitter.listeners.bind(emitter)\n    },\n    addListener: emitter.addListener.bind(emitter),\n    emit: emitter.emit.bind(emitter),\n    off: emitter.off.bind(emitter),\n    on: emitter.on.bind(emitter),\n    once: emitter.once.bind(emitter),\n    removeAllListeners: emitter.removeAllListeners.bind(emitter),\n    removeListener: emitter.removeListener.bind(emitter),\n  }\n}\n\nconst emitter = createEmitter()\n\nexport const sdk: FrameSDK = {\n  ...emitter,\n  context: frameHost.context,\n  actions: {\n    setPrimaryButton: frameHost.setPrimaryButton.bind(frameHost),\n    ready: frameHost.ready.bind(frameHost),\n    close: frameHost.close.bind(frameHost),\n    viewProfile: frameHost.viewProfile.bind(frameHost),\n    signIn: async (options) => {\n      const response = await frameHost.signIn(options)\n      if (response.result) {\n        return response.result\n      }\n\n      if (response.error.type === 'rejected_by_user') {\n        throw new SignIn.RejectedByUser()\n      }\n\n      throw new Error('Unreachable')\n    },\n    openUrl: (urlArg: string | { url: string }) => {\n      const url = typeof urlArg === 'string' ? urlArg : urlArg.url\n      return frameHost.openUrl(url.trim())\n    },\n    addFrame: async () => {\n      const response = await frameHost.addFrame()\n      if (response.result) {\n        return response.result\n      }\n\n      if (response.error.type === 'invalid_domain_manifest') {\n        throw new AddFrame.InvalidDomainManifest()\n      }\n\n      if (response.error.type === 'rejected_by_user') {\n        throw new AddFrame.RejectedByUser()\n      }\n\n      throw new Error('Unreachable')\n    },\n    composeCast(options = {}) {\n      return frameHost.composeCast(options) as never\n    },\n  },\n  experimental: {\n    viewToken: frameHost.viewToken.bind(frameHost),\n    sendToken: frameHost.sendToken.bind(frameHost),\n    swapToken: frameHost.swapToken.bind(frameHost),\n  },\n  wallet: {\n    ethProvider: provider,\n  },\n}\n\n// Required to pass SSR\nif (typeof document !== 'undefined') {\n  // react native webview events\n  document.addEventListener('FarcasterFrameEvent', (event) => {\n    if (event instanceof MessageEvent) {\n      const frameEvent = event.data as FrameClientEvent\n      if (frameEvent.event === 'primary_button_clicked') {\n        emitter.emit('primaryButtonClicked')\n      } else if (frameEvent.event === 'frame_added') {\n        emitter.emit('frameAdded', {\n          notificationDetails: frameEvent.notificationDetails,\n        })\n      } else if (frameEvent.event === 'frame_add_rejected') {\n        emitter.emit('frameAddRejected', { reason: frameEvent.reason })\n      } else if (frameEvent.event === 'frame_removed') {\n        emitter.emit('frameRemoved')\n      } else if (frameEvent.event === 'notifications_enabled') {\n        emitter.emit('notificationsEnabled', {\n          notificationDetails: frameEvent.notificationDetails,\n        })\n      } else if (frameEvent.event === 'notifications_disabled') {\n        emitter.emit('notificationsDisabled')\n      }\n    }\n  })\n}\n\n// Required to pass SSR\nif (typeof window !== 'undefined') {\n  // web events\n  window.addEventListener('message', (event) => {\n    if (event instanceof MessageEvent) {\n      if (event.data.type === 'frameEvent') {\n        const frameEvent = event.data.event as FrameClientEvent\n        if (frameEvent.event === 'primary_button_clicked') {\n          emitter.emit('primaryButtonClicked')\n        } else if (frameEvent.event === 'frame_added') {\n          emitter.emit('frameAdded', {\n            notificationDetails: frameEvent.notificationDetails,\n          })\n        } else if (frameEvent.event === 'frame_add_rejected') {\n          emitter.emit('frameAddRejected', { reason: frameEvent.reason })\n        } else if (frameEvent.event === 'frame_removed') {\n          emitter.emit('frameRemoved')\n        } else if (frameEvent.event === 'notifications_enabled') {\n          emitter.emit('notificationsEnabled', {\n            notificationDetails: frameEvent.notificationDetails,\n          })\n        } else if (frameEvent.event === 'notifications_disabled') {\n          emitter.emit('notificationsDisabled')\n        }\n      }\n    }\n  })\n}\n"],
  "mappings": "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",
  "names": ["require_eventemitter3", "__commonJSMin", "exports", "module", "has", "prefix", "Events", "EE", "fn", "context", "once", "addListener", "emitter", "event", "listener", "evt", "clearEvent", "EventEmitter", "names", "events", "name", "handlers", "i", "l", "ee", "listeners", "a1", "a2", "a3", "a4", "a5", "len", "args", "length", "j", "index_exports", "__export", "AddFrame_exports", "ComposeCast_exports", "context_exports", "DEFAULT_READY_OPTIONS", "errors_exports", "ethereum_exports", "manifest_exports", "Ready_exports", "SendToken_exports", "SignIn_exports", "SwapToken_exports", "ViewProfile_exports", "ViewToken_exports", "actionLaunchFrameSchema", "actionSchema", "actionViewTokenSchema", "aspectRatioSchema", "buttonSchema", "buttonTitleSchema", "caip19TokenSchema", "createEmitter", "createSimpleStringSchema", "index_default", "domainFrameConfigSchema", "domainManifestSchema", "encodedJsonFarcasterSignatureSchema", "eventFrameAddedSchema", "eventFrameRemovedSchema", "eventNotificationsEnabledSchema", "frameEmbedNextSchema", "frameNameSchema", "hexColorSchema", "jsonFarcasterSignatureHeaderSchema", "notificationDetailsSchema", "notificationsDisabledSchema", "safeParseFrameEmbed", "sdk", "secureUrlSchema", "sendNotificationRequestSchema", "sendNotificationResponseSchema", "serverEventSchema", "AddFrame_exports", "__export", "InvalidDomainManifest", "RejectedByUser", "errors_exports", "__export", "BaseError", "message", "options", "InvalidDomainManifest", "BaseError", "RejectedByUser", "ComposeCast_exports", "Ready_exports", "__export", "DEFAULT_READY_OPTIONS", "SignIn_exports", "__export", "RejectedByUser", "RejectedByUser", "BaseError", "SendToken_exports", "SwapToken_exports", "ViewProfile_exports", "ViewToken_exports", "ethereum_exports", "context_exports", "manifest_exports", "util", "val", "assertIs", "_arg", "assertNever", "_x", "items", "obj", "item", "validKeys", "k", "filtered", "e", "object", "keys", "key", "arr", "checker", "joinValues", "array", "separator", "_", "value", "objectUtil", "first", "second", "ZodParsedType", "getParsedType", "data", "ZodIssueCode", "quotelessJson", "ZodError", "_ZodError", "issues", "sub", "subs", "actualProto", "_mapper", "mapper", "issue", "fieldErrors", "processError", "error", "curr", "i", "el", "formErrors", "errorMap", "_ctx", "message", "overrideErrorMap", "setErrorMap", "map", "getErrorMap", "makeIssue", "params", "path", "errorMaps", "issueData", "fullPath", "fullIssue", "errorMessage", "maps", "m", "EMPTY_PATH", "addIssueToContext", "ctx", "overrideMap", "x", "ParseStatus", "_ParseStatus", "status", "results", "arrayValue", "INVALID", "pairs", "syncPairs", "pair", "finalObject", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "__classPrivateFieldGet", "receiver", "state", "kind", "f", "__classPrivateFieldSet", "errorUtil", "message", "_ZodEnum_cache", "_ZodNativeEnum_cache", "ParseInputLazyPath", "parent", "value", "path", "key", "handleResult", "ctx", "result", "isValid", "error", "ZodError", "processCreateParams", "params", "errorMap", "invalid_type_error", "required_error", "description", "iss", "_a", "_b", "ZodType", "input", "getParsedType", "ParseStatus", "isAsync", "data", "err", "maybeAsyncResult", "check", "getIssueProperties", "val", "setError", "ZodIssueCode", "refinementData", "refinement", "ZodEffects", "ZodFirstPartyTypeKind", "def", "ZodOptional", "ZodNullable", "ZodArray", "ZodPromise", "option", "ZodUnion", "incoming", "ZodIntersection", "transform", "defaultValueFunc", "ZodDefault", "ZodBranded", "catchValueFunc", "ZodCatch", "This", "target", "ZodPipeline", "ZodReadonly", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "nanoidRegex", "jwtRegex", "durationRegex", "emailRegex", "_emojiRegex", "emojiRegex", "ipv4Regex", "ipv4CidrRegex", "ipv6Regex", "ipv6CidrRegex", "base64Regex", "base64urlRegex", "dateRegexSource", "dateRegex", "timeRegexSource", "args", "regex", "timeRegex", "datetimeRegex", "opts", "isValidIP", "ip", "version", "isValidJWT", "jwt", "alg", "header", "base64", "decoded", "isValidCidr", "ZodString", "_ZodString", "ZodParsedType", "addIssueToContext", "INVALID", "status", "tooBig", "tooSmall", "util", "validation", "options", "minLength", "maxLength", "len", "ch", "min", "max", "floatSafeRemainder", "step", "valDecCount", "stepDecCount", "decCount", "valInt", "stepInt", "ZodNumber", "_ZodNumber", "kind", "inclusive", "ZodBigInt", "_ZodBigInt", "ZodBoolean", "OK", "ZodDate", "_ZodDate", "minDate", "maxDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodAny", "ZodUnknown", "ZodNever", "ZodVoid", "_ZodArray", "item", "i", "schema", "deepPartialify", "ZodObject", "newShape", "fieldSchema", "ZodTuple", "_ZodObject", "shape", "keys", "shapeKeys", "extraKeys", "pairs", "keyValidator", "unknownKeys", "catchall", "syncPairs", "pair", "issue", "_c", "_d", "defaultError", "augmentation", "merging", "index", "mask", "newField", "createZodEnum", "handleResults", "results", "unionErrors", "childCtx", "dirty", "issues", "types", "getDiscriminator", "type", "ZodLazy", "ZodLiteral", "ZodEnum", "ZodNativeEnum", "ZodDiscriminatedUnion", "_ZodDiscriminatedUnion", "discriminator", "discriminatorValue", "optionsMap", "discriminatorValues", "mergeValues", "a", "b", "aType", "bType", "bKeys", "sharedKeys", "newObj", "sharedValue", "newArray", "itemA", "itemB", "handleParsed", "parsedLeft", "parsedRight", "isAborted", "merged", "isDirty", "left", "right", "_ZodTuple", "items", "itemIndex", "x", "rest", "schemas", "ZodRecord", "_ZodRecord", "keyType", "valueType", "first", "second", "third", "ZodMap", "finalMap", "ZodSet", "_ZodSet", "finalizeSet", "elements", "parsedSet", "element", "minSize", "maxSize", "size", "ZodFunction", "_ZodFunction", "makeArgsIssue", "makeIssue", "getErrorMap", "makeReturnsIssue", "returns", "fn", "me", "parsedArgs", "e", "parsedReturns", "returnType", "func", "getter", "values", "_ZodEnum", "expectedValues", "__classPrivateFieldGet", "__classPrivateFieldSet", "enumValues", "newDef", "opt", "nativeEnumValues", "promisified", "effect", "checkCtx", "arg", "processed", "DIRTY", "executeRefinement", "acc", "inner", "base", "preprocess", "newCtx", "ZodNaN", "BRAND", "_ZodPipeline", "inResult", "freeze", "custom", "fatal", "p", "_fatal", "p2", "late", "instanceOfType", "cls", "stringType", "numberType", "nanType", "bigIntType", "booleanType", "dateType", "symbolType", "undefinedType", "nullType", "anyType", "unknownType", "neverType", "voidType", "arrayType", "objectType", "strictObjectType", "unionType", "discriminatedUnionType", "intersectionType", "tupleType", "recordType", "mapType", "setType", "functionType", "lazyType", "literalType", "enumType", "nativeEnumType", "promiseType", "effectsType", "optionalType", "nullableType", "preprocessType", "pipelineType", "ostring", "onumber", "oboolean", "coerce", "NEVER", "z", "setErrorMap", "EMPTY_PATH", "objectUtil", "quotelessJson", "SPECIAL_CHARS_PATTERN", "REPEATED_PUNCTUATION_PATTERN", "EMOJI_PATTERN", "createSimpleStringSchema", "max", "noSpaces", "z", "value", "secureUrlSchema", "frameNameSchema", "buttonTitleSchema", "CAIP_19_REGEX", "caip19TokenSchema", "hexColorSchema", "aspectRatioSchema", "encodedJsonFarcasterSignatureSchema", "jsonFarcasterSignatureHeaderSchema", "actionLaunchFrameSchema", "z", "frameNameSchema", "secureUrlSchema", "hexColorSchema", "actionViewTokenSchema", "caip19TokenSchema", "actionSchema", "buttonSchema", "buttonTitleSchema", "frameEmbedNextSchema", "aspectRatioSchema", "safeParseFrameEmbed", "rawResponse", "notificationDetailsSchema", "z", "sendNotificationRequestSchema", "secureUrlSchema", "sendNotificationResponseSchema", "eventFrameAddedSchema", "z", "notificationDetailsSchema", "eventFrameRemovedSchema", "eventNotificationsEnabledSchema", "notificationsDisabledSchema", "serverEventSchema", "primaryCategorySchema", "z", "domainFrameConfigSchema", "frameNameSchema", "secureUrlSchema", "buttonTitleSchema", "hexColorSchema", "createSimpleStringSchema", "domainManifestSchema", "encodedJsonFarcasterSignatureSchema", "import_index", "proxyMarker", "createEndpoint", "releaseProxy", "finalizer", "throwMarker", "isObject", "val", "proxyTransferHandler", "obj", "port1", "port2", "expose", "port", "wrap", "throwTransferHandler", "value", "serialized", "transferHandlers", "isAllowedOrigin", "allowedOrigins", "origin", "allowedOrigin", "ep", "callback", "ev", "id", "type", "path", "argumentList", "fromWireValue", "returnValue", "parent", "prop", "rawValue", "proxy", "transfer", "wireValue", "transferables", "toWireValue", "closeEndPoint", "error", "isMessagePort", "endpoint", "target", "pendingListeners", "data", "resolver", "createProxy", "throwIfProxyReleased", "isReleased", "releaseEndpoint", "requestResponseMessage", "proxyCounter", "proxyFinalizers", "newCount", "registerProxy", "unregisterProxy", "isProxyReleased", "_target", "r", "p", "_thisArg", "rawArgumentList", "last", "processArguments", "myFlat", "arr", "processed", "v", "transferCache", "transfers", "windowEndpoint", "w", "context", "targetOrigin", "msg", "name", "handler", "serializedValue", "resolve", "generateUUID", "mockEndpoint", "webViewEndpoint", "data", "_", "listener", "args", "endpoint", "windowEndpoint", "frameHost", "wrap", "endpoint", "version", "getVersion", "version", "BaseError", "_BaseError", "shortMessage", "options", "details", "docsPath", "docs", "message", "x", "getVersion", "fn", "walk", "err", "parse", "response", "options", "raw", "response_", "code", "JsonRpcError", "InternalError", "InvalidInputError", "InvalidParamsError", "InvalidRequestError", "LimitExceededError", "MethodNotFoundError", "MethodNotSupportedError", "ParseError", "ResourceNotFoundError", "ResourceUnavailableError", "TransactionRejectedError", "VersionNotSupportedError", "BaseError", "errorObject", "message", "data", "_InvalidInputError", "parameters", "_ResourceNotFoundError", "_ResourceUnavailableError", "_TransactionRejectedError", "_MethodNotSupportedError", "_LimitExceededError", "_VersionNotSupportedError", "_InvalidRequestError", "_MethodNotFoundError", "_InvalidParamsError", "_InternalError", "_ParseError", "ProviderRpcError", "code", "message", "UserRejectedRequestError", "UnauthorizedError", "UnsupportedMethodError", "DisconnectedError", "ChainDisconnectedError", "createEmitter", "emitter", "EventEmitter", "from", "provider", "options", "includeEvents", "IsUndefinedError", "args", "result", "parse", "BaseError", "createStore", "options", "id", "from", "emitter", "createEmitter", "store", "createStore", "toProviderRpcError", "code", "details", "UserRejectedRequestError", "UnauthorizedError", "UnsupportedMethodError", "DisconnectedError", "ChainDisconnectedError", "ProviderRpcError", "provider", "from", "args", "request", "response", "frameHost", "res", "parse", "e", "BaseError", "InternalError", "announceProvider", "detail", "event", "handler", "ethProviderEvent", "frameEvent", "createEmitter", "emitter", "EventEmitter", "sdk", "frameHost", "options", "response", "SignIn_exports", "urlArg", "url", "AddFrame_exports", "provider", "event", "frameEvent", "index_default", "sdk"]
}
